{
  "name": "@xunnamius/do-not-install",
  "version": "6.1.7",
  "description": "A dummy package used for testing workflow pipelines. Not to be installed!",
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/workflow-playground"
  },
  "license": "Unlicense",
  "author": "Xunnamius",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    ".": {
      "default": "./dist/lib/index.js",
      "import": "./dist/lib/index.mjs",
      "require": "./dist/lib/index.js"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "main": "./dist/lib/index",
  "module": "./dist/lib/index.mjs",
  "types": "./dist/lib/index.d.ts",
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run build-dist --",
    "build-changelog": "conventional-changelog --outfile CHANGELOG.md --preset angular --config .changelogrc.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./.changelogrc.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.tmp && mv CHANGELOG.md.tmp CHANGELOG.md; fi) && prettier --write CHANGELOG.md --loglevel warn",
    "build-dist": "npm run clean && NODE_ENV=production tsc --project tsconfig.types.json && NODE_ENV=production webpack --config-name main && NODE_ENV=esm babel src --extensions .ts --out-dir dist/lib --out-file-extension .mjs && { echo -n '\"undefined\"!=typeof window&&(window.global=window);'; cat dist/lib/index.js; } > dist/lib/index.js-tmp && mv -f dist/lib/index.js-tmp dist/lib/index.js",
    "build-docs": "typedoc --plugin typedoc-plugin-markdown --out docs --readme none src/index.ts && find docs -name '*.md' -exec sed -i -e 's/`__namedParameters`: //g' {} + && find docs -name '*.md' -exec sed -i -e 's/__namedParameters/\\(destructured\\)/g' {} + && find docs -name '*.md' -exec sed -i -e 's/Project: //g' {} + && sed -i -e 1,4d docs/README.md",
    "build-stats": "NODE_ENV=production webpack --config-name main --json > bundle-stats.json",
    "clean": "rm -rf dist npm.pipe coverage external-scripts/bin",
    "format": "sort-package-json && npx remark . -o --use reference-links && prettier --write .",
    "postinstall": "if [ -z \"$CI\" ]; then husky install; else echo 'skipped installing husky git hooks'; fi",
    "lint": "rm -f npm.pipe; touch npm.pipe; command -v unbuffer >/dev/null; X=$?; [ $X -eq 0 ] && unbuffer tsc --project tsconfig.lint.json >> npm.pipe; Y=$?; [ $Y -eq 0 ] && echo >> npm.pipe; unbuffer eslint --parser-options=project:tsconfig.lint.json src >> npm.pipe; Z=$?; [ $X -ne 0 ] && tsc --project tsconfig.lint.json >> npm.pipe && eslint --parser-options=project:tsconfig.lint.json src >> npm.pipe; W=$?; cat npm.pipe | less -R -FX; rm npm.pipe; ([ $W -eq 0 ] && [ $X -ne 0 ]) || ([ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ])",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))' && echo '\n(no gulp tasks defined for this project)'",
    "test": "npm run test-unit --",
    "test-integration": "npm run list-tasks | grep -e '^test-integration-' | xargs -n1 npm run",
    "test-integration-browser": "BABEL_ENV=test jest test/integration-browser*.test.ts",
    "test-integration-node": "BABEL_ENV=test jest test/integration-node*.test.ts",
    "test-unit": "BABEL_ENV=test jest --coverage --collectCoverageFrom 'src/**/*.ts' --collectCoverageFrom 'lib/**/*.ts' --testPathIgnorePatterns test/integration-*.test.ts"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-leading-blank": [
        2,
        "always"
      ],
      "footer-leading-blank": [
        2,
        "always"
      ],
      "type-enum": [
        2,
        "always",
        [
          "feat",
          "fix",
          "docs",
          "style",
          "refactor",
          "test",
          "revert",
          "debug",
          "build",
          "chore"
        ]
      ]
    }
  },
  "lint-staged": {
    "*.md": [
      "remark -o --use reference-links --use gfm"
    ],
    "./package.json": "sort-package-json",
    "*": "prettier --write --ignore-unknown"
  },
  "prettier": {
    "endOfLine": "lf",
    "printWidth": 80,
    "proseWrap": "always",
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "none",
    "overrides": [
      {
        "files": "**/*.@(ts|?(@(c|m))js)?(x)",
        "options": {
          "parser": "babel-ts",
          "printWidth": 90
        }
      }
    ]
  },
  "jest": {
    "setupFilesAfterEnv": [
      "./test/setup.ts"
    ],
    "testEnvironment": "node",
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "testRunner": "jest-circus/runner",
    "testTimeout": 20000,
    "verbose": false
  },
  "dependencies": {
    "chalk": "^4.1.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.12.10",
    "@babel/core": "^7.12.10",
    "@babel/plugin-proposal-export-default-from": "^7.12.1",
    "@babel/plugin-proposal-function-bind": "^7.12.1",
    "@babel/preset-env": "^7.12.11",
    "@babel/preset-typescript": "^7.12.7",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@ergodark/types": "^1.0.16",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/exec": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/expect-puppeteer": "^4.4.5",
    "@types/jest": "^26.0.19",
    "@types/node": "^14.14.16",
    "@types/puppeteer": "^5.4.2",
    "@types/test-listen": "^1.1.0",
    "@types/webpack": "^4.41.25",
    "@typescript-eslint/eslint-plugin": "^4.11.1",
    "@typescript-eslint/parser": "^4.11.1",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "^8.2.2",
    "babel-plugin-source-map-support": "^2.1.3",
    "babel-plugin-transform-mjs-imports": "^1.0.1",
    "confusing-browser-globals": "^1.0.10",
    "conventional-changelog-angular": "^5.0.12",
    "conventional-changelog-cli": "^2.1.1",
    "eslint": "^7.16.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^2.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.3",
    "husky": "^5.0.4",
    "jest": "^26.6.3",
    "jest-circus": "^26.6.3",
    "jest-extended": "^0.11.5",
    "lint-staged": "^10.5.3",
    "prettier": "^2.2.1",
    "puppeteer": "5.4.0",
    "remark-cli": "^9.0.0",
    "remark-gfm": "^1.0.0",
    "remark-reference-links": "^5.0.0",
    "semantic-release": "Xunnamius/semantic-release#contrib-holistic",
    "shelljs": "^0.8.4",
    "sort-package-json": "Xunnamius/sort-package-json#contrib",
    "source-map-support": "^0.5.19",
    "spellchecker": "^3.7.1",
    "test-listen": "^1.1.0",
    "text-extensions": "^2.3.0",
    "typedoc": "0.20.5",
    "typedoc-plugin-markdown": "3.2.1",
    "typescript": "^4.1.3",
    "webpack": "^5.11.1",
    "webpack-cli": "^4.3.0",
    "webpack-node-module-types": "^1.0.4"
  },
  "engines": {
    "node": ">=10.x"
  },
  "publishConfig": {
    "access": "public"
  },
  "env-expect": {
    "errorMessage": "\nCopy the \".env.example\" file to \".env\" and/or define only the appropriate environment variables",
    "rules": []
  }
}
