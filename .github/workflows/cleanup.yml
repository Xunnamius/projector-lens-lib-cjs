name: cleanup

# ! If you want to use this workflow, the NPM_TOKEN secret must be defined!

on:
  workflow_dispatch: # * Treated like a `delete` event
  delete:

env:
  NODE_CURRENT_VERSION: 15.x
  IGNORE_TAGS: 'latest' # example: IGNORE_TAGS: 'tag1, tag2, tag-3'
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  cleanup-npm-dist-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 #1000 https://github.com/mstachniuk/ci-skip#use-cases
          persist-credentials: false

      - name: Reconfigure git auth
        run:
          git config --global url."https://${{ secrets.GH_TOKEN
          }}@github.com/".insteadOf ssh://git@github.com/

      - name: Use node ${{ env.NODE_CURRENT_VERSION }}
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ env.NODE_CURRENT_VERSION }}

      - name: Cache npm
        uses: actions/cache@v2
        id: cache-npm
        with:
          key: npm-cleanup-${{ runner.os }}
          path: ~/.npm
          restore-keys: npm-${{ runner.os }}-

      - name: Remove any erroneous dist tags
        run: |
          npm install micromatch
          git remote prune origin
          BRANCHES=`git for-each-ref --format='%(refname:lstrip=3)' refs/remotes/origin`
          export BRANCHES
          DIST_TAGS=`npm dist-tag list @xunnamius/do-not-install`
          export DIST_TAGS
          MATCHED_TAGS=$(node -e 'const match = require("micromatch"); const tags = process.env.DIST_TAGS.split("\n").map(t => t.split(":")[0]); const branches = match(process.env.BRANCHES.split("\n"), require("./release.config.js").branches.reduce((a,b) => [...a, b.name || b.toString()], [])); const ignoreTags = process.env.IGNORE_TAGS.split(", "); console.log(tags.reduce((a,t) => branches.some(b => ignoreTags.includes(t) || t == b || t == `release-${b}`) ? a : [...a, t], []).join(" "))')
          PKG_NAME=`node -e 'console.log(require("./package.json").name)'`
          export MATCHED_TAGS
          node -e 'process.env.MATCHED_TAGS.split(" ").forEach(t => console.log(`deleting dist-tag "${t}"`))'
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          npm whoami
          echo $MATCHED_TAGS | xargs -n1 npm dist-tag rm "$PKG_NAME"
